#!/usr/bin/env ruby
# encoding: UTF-8
require 'slack'
require 'pp'

Slack.configure do |config|
	config.token = "#{SLACK_TOKEN_GOES_HERE}"
end

c = Slack::Client.new
t = Time.now.hour

pizza_days = [ "2016-04-20", "2016-05-11", "2016-06-08",
               "2016-07-18", "2016-08-12", "2016-09-14",
               "2016-10-07", "2016-11-08", "2016-12-07",
               "2017-01-16", "2017-02-20", "2017-03-17",
               "2017-04-19", "2017-05-26", "2017-06-28",
               "2017-07-28" ]

# pizza_day = Time.now.day <= 7 && Time.now.friday?
pizza_day = pizza_days.index(Time.new.to_s.split(" ")[0])

channel = 'C04UE6S5W' # '#lunch'
# channel = 'D08S32JCB' # @michalz
message = nil

if (t >= 14)
	message = "Svačinku nebo pivínko? :beers:"

elsif (t >= 11)
	sleep(rand() * 2384 % 7 * 60)

	if (pizza_day) then
		sleep_time = 60-Time.now.min
		sleep_time = 0 if t >= 12
		sleep(sleep_time)
	end

	h = c.channels_history({ :channel => channel })
	last = h["messages"][0]

	if last != nil
		ts = last['ts'].to_i
		ts = Time.at(ts)
		exit 0 if ts.hour >= 11 && ts.min >= 25
	end

	message = [ "Jdem! :poultry_leg:",
	            "Bon apetit! :spaghetti:",
	            "Jde se jíst! :oden:",
	            "Do zbraně! :fork_and_knife:",
	            "Tak, dnešní gurmánská nálož čeká! :flick: :excellent:",
	          ].sample

	message = ":pizza: :pizza: !PIZZA TIME! :pizza: :pizza:" if pizza_day

elsif (t == 10 && Time.now.min >= 30)
	now = Time.now
	midnight = now - (now.hour*60*60 + now.min*60 + now.sec)
	h = c.channels_history({ :channel => channel, :inclusive => 1, :oldest => midnight.to_i, :count => 1000 })
	# h = c.im_history({ :channel => channel, :inclusive => 1, :oldest => midnight.to_i, :count => 1000 })
	h = h["messages"]

	people_orders = { }
	orders = { }

	lunch_points = {
		"Kočka" => ["ZK","KOCKA"],
		"Plzeň" => ["PD","PLZEN"],
		"Sono" => ["SONO"],
		"Helan" => ["HELAN","H"],
		"Bistro" => ["B","BISTRO"],
		"Lokofu" => ["L","LOK","LOKOFU"],
		"Doširak" => ["DOSIRAK"],
		"Pho Viet" => ["PHO","PHOVIET"],
		"Šelepka" => ["S","SELEPKA"],
	}

	lunch_prefixes = lunch_points.map {|k,v| v }.flatten
	lunch_prefixes = lunch_prefixes.join '|'

	h.reverse.each{|m|
		text = m["text"]
		user = m["user"]
		next if text == nil || user == nil
		text.strip!
		text = text.split(" ")[0]

		selections = text.split "+"
		selections.map! {|c|
			elm = nil
			if (c =~ Regexp.new('^('+ lunch_prefixes +')([0-9]{0,1}|x)'))
				elm = c.match(Regexp.new('^('+ lunch_prefixes +')'))[0]
				num = c.gsub(/^[a-zA-Z]+/, '').to_i
				# puts "#{c} => #{elm}"
				# elm += num.to_s if num != 0
				# puts "#{c} => #{elm}"
			end
			elm
		}
		selections.select! {|s| s != nil }
		people_orders[user] = selections if selections.count > 0

		# puts "#{user}: #{text} => #{selections}"
	}

	people_orders.each{|k,v|
		next if v.count == 0
		lunch_points.each{|l,w|
			people_orders[k] = [l] if w.include?(v[0])
		}
	}

	people_orders.each{|k,v|
		next if !v || !(v.is_a? Array) || v.count == 0
		v.each{|item|
			val = orders[item]
			val = 0 if val == nil
			val += 1
			orders[item] = val
		}
	}

	message = [ "Tož kam dnes? :whatsgoinon: :taco:",
	            "Tak kam se jde dneska? :fries: :cocktail:",
	          ].sample
	message = [ "Dneska nic? :scream: :derp_happy:",
		        "Nikto nie je hladny? :pokerface: :boredparrot:",
		      ].sample if orders.count == 0

	if (orders.count)
		message += "\n"
		orders.keys.sort.each{|k|
			message += "\n" + k + ": " + orders[k].to_s + "\u00D7"
		}
	end

	message = "Dneska bude pizza! :pizza:" if pizza_day

elsif (t >= 8)
	exit 0 if pizza_day
	h = c.channels_history({ :channel => channel })
	last = h["messages"][0]

	if last != nil
		ts = last['ts'].to_i
		ts = Time.at(ts)
		now = Time.now
		midnight = now - (now.hour*60*60 + now.min*60 + now.sec)
		# exit 0 if ts > midnight
		message = [ "Nojo, dneska má někdo fakt hlad! :dango:",
		            "Bože, zase nedočkavci? :ramen:",
		            "Prr prrrrr, ještě si to rozmyslíte a co já s tím pak? :facepalm:",
		            "Cože co? Říkal někdo „špecle“? :troll:",
		            "Dneska bude hostinaaaa! :taco: :beer:",
		            "Nojo, není nad UHO a kaťáky! :stew:",
		          ].sample if ts > midnight
	end

	message = [ "It's time to choose! :hamburger:",
	            "Dámy, páni, čas vybírat! :stew:",
	            "/votelunch :doughnut:",
	          ].sample if message == nil
end

# Send message, if any
if message != nil
	c.chat_postMessage({ :channel => channel, :text => message, :as_user => true })
	# puts message
end
